# generated by datamodel-codegen:
#   filename:  bot_state.json
#   timestamp: 2022-09-04T05:04:28+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field

from . import color


class BotState(BaseModel):
    energy: float = Field(..., description='Energy level')
    x: float = Field(..., description='X coordinate')
    y: float = Field(..., description='Y coordinate')
    direction: float = Field(..., description='Driving direction in degrees')
    gunDirection: float = Field(..., description='Gun direction in degrees')
    radarDirection: float = Field(..., description='Radar direction in degrees')
    radarSweep: float = Field(
        ...,
        description='Radar sweep angle in degrees, i.e. angle between previous and current radar direction',
    )
    speed: float = Field(..., description='Speed measured in units per turn')
    turnRate: float = Field(
        ...,
        description='Turn rate of the body in degrees per turn (can be positive and negative)',
    )
    gunTurnRate: float = Field(
        ...,
        description='Turn rate of the gun in degrees per turn (can be positive and negative)',
    )
    radarTurnRate: float = Field(
        ...,
        description='Turn rate of the radar in degrees per turn (can be positive and negative)',
    )
    gunHeat: float = Field(..., description='Gun heat')
    bodyColor: Optional[color.Color] = Field(
        None, description='Current RGB color of the body'
    )
    turretColor: Optional[color.Color] = Field(
        None, description='New color of the gun turret'
    )
    radarColor: Optional[color.Color] = Field(
        None, description='New color of the radar'
    )
    bulletColor: Optional[color.Color] = Field(
        None,
        description='New color of the bullet. Note. This will be the color of a bullet when it is fired',
    )
    scanColor: Optional[color.Color] = Field(
        None, description='New color of the scan arc'
    )
    tracksColor: Optional[color.Color] = Field(
        None, description='New color of the tracks'
    )
    gunColor: Optional[color.Color] = Field(None, description='New color of gun')
