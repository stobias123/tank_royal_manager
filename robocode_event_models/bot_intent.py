# generated by datamodel-codegen:
#   filename:  bot_intent.json
#   timestamp: 2022-09-04T05:04:28+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field, confloat

from . import color


class BotIntent(BaseModel):
    turnRate: Optional[float] = Field(
        None,
        description='Turn rate of the body in degrees per turn (can be positive and negative)',
    )
    gunTurnRate: Optional[float] = Field(
        None,
        description='Turn rate of the gun in degrees per turn (can be positive and negative)',
    )
    radarTurnRate: Optional[float] = Field(
        None,
        description='Turn rate of the radar in degrees per turn (can be positive and negative)',
    )
    targetSpeed: Optional[float] = Field(
        None,
        description='New target speed in units per turn (can be positive and negative)',
    )
    firepower: Optional[confloat(le=3.0, gt=0.0)] = Field(
        None, description='Attempt to fire gun with the specified firepower'
    )
    adjustGunForBodyTurn: Optional[bool] = Field(
        None,
        description='Flag indicating if the gun must be adjusted to compensate for the body turn. Default is false.',
    )
    adjustRadarForBodyTurn: Optional[bool] = Field(
        None,
        description='Flag indicating if the radar must be adjusted to compensate for the body turn. Default is false.',
    )
    adjustRadarForGunTurn: Optional[bool] = Field(
        None,
        description='Flag indicating if the radar must be adjusted to compensate for the gun turn. Default is false.',
    )
    rescan: Optional[bool] = Field(
        None,
        description='Flag indicating if the bot should rescan with previous radar direction and scan sweep angle.',
    )
    bodyColor: Optional[color.Color] = Field(None, description='New color of the body')
    turretColor: Optional[color.Color] = Field(
        None, description='New color of the cannon turret'
    )
    radarColor: Optional[color.Color] = Field(
        None, description='New color of the radar'
    )
    bulletColor: Optional[color.Color] = Field(
        None,
        description='New color of the bullet. Note. This will be the color of a bullet when it is fired',
    )
    scanColor: Optional[color.Color] = Field(
        None, description='New color of the scan arc'
    )
    tracksColor: Optional[color.Color] = Field(
        None, description='New color of the tracks'
    )
    gunColor: Optional[color.Color] = Field(None, description='New color of the gun')
